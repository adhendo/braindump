{"ast":null,"code":"var _jsxFileName = \"/Users/adamhendrickson/blogboi/pages/components/instaLoader.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nexport const GET_INSTAGRAMS = gql`\n\tquery {\n\t\tinstagram {\n\t\t\tid\n\t\t\timageURLs\n\t\t\tlinkURLs\n\t\t}\n\t}\n`;\n\nfunction InstaLoader() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_INSTAGRAMS);\n  if (loading) return \"\";\n  if (error) return `Error! ${error.message}`;\n  return __jsx(React.Fragment, null, data.instagram.map(instagram => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: instagram.linkURLs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: instagram.imageURLs,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })))));\n}\n\nexport default InstaLoader;","map":{"version":3,"sources":["/Users/adamhendrickson/blogboi/pages/components/instaLoader.js"],"names":["useQuery","gql","GET_INSTAGRAMS","InstaLoader","loading","error","data","message","instagram","map","linkURLs","imageURLs"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,cAAc,GAAGD,GAAI;;;;;;;;CAA3B;;AAUP,SAASE,WAAT,GAAuB;AACtB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBN,QAAQ,CAACE,cAAD,CAAvC;AAEA,MAAIE,OAAJ,EAAa,OAAO,EAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,SACC,4BACED,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmBD,SAAS,IAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAG,IAAA,IAAI,EAAEA,SAAS,CAACE,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,GAAG,EAAEF,SAAS,CAACG,SAApB;AAA+B,IAAA,GAAG,EAAC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADA,CADF,CADD;AAWA;;AAED,eAAeR,WAAf","sourcesContent":["import {useQuery} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nexport const GET_INSTAGRAMS = gql`\n\tquery {\n\t\tinstagram {\n\t\t\tid\n\t\t\timageURLs\n\t\t\tlinkURLs\n\t\t}\n\t}\n`;\n\nfunction InstaLoader() {\n\tconst {loading, error, data} = useQuery(GET_INSTAGRAMS);\n\n\tif (loading) return \"\";\n\tif (error) return `Error! ${error.message}`;\n\n\treturn (\n\t\t<>\n\t\t\t{data.instagram.map(instagram => (\n\t\t\t\t<div>\n\t\t\t\t\t<a href={instagram.linkURLs}>\n\t\t\t\t\t\t<img src={instagram.imageURLs} alt=\"\" />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</>\n\t);\n}\n\nexport default InstaLoader;\n"]},"metadata":{},"sourceType":"module"}