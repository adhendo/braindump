{"ast":null,"code":"var _jsxFileName = \"/Users/adamhendrickson/blogboi/components/youtubeLoader.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport styles from \"../styles/main.module.css\";\nexport const GET_YOUTUBE_VIDEOS = gql`\n\tquery {\n\t\tyoutube {\n\t\t\tid\n\t\t\tvideoTitle\n\t\t\tvideoURL\n\t\t}\n\t}\n`;\n\nfunction YoutubeLoader() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_YOUTUBE_VIDEOS);\n  if (loading) return \"\";\n  if (error) return `Error! ${error.message}`;\n  return __jsx(\"div\", {\n    className: styles.youtubeScrollr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, data.youtube.map(youtube => __jsx(\"iframe\", {\n    className: styles.youtubeVid,\n    width: \"325\",\n    height: \"255\",\n    src: youtube.videoURL,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowfullscreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n}\n\nexport default YoutubeLoader;","map":{"version":3,"sources":["/Users/adamhendrickson/blogboi/components/youtubeLoader.js"],"names":["useQuery","gql","styles","GET_YOUTUBE_VIDEOS","YoutubeLoader","loading","error","data","message","youtubeScrollr","youtube","map","youtubeVid","videoURL"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,OAAO,MAAMC,kBAAkB,GAAGF,GAAI;;;;;;;;CAA/B;;AAUP,SAASG,aAAT,GAAyB;AACxB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBP,QAAQ,CAACG,kBAAD,CAAvC;AAEA,MAAIE,OAAJ,EAAa,OAAO,EAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,SACC;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBD,OAAO,IACxB;AACC,IAAA,SAAS,EAAER,MAAM,CAACU,UADnB;AAEC,IAAA,KAAK,EAAC,KAFP;AAGC,IAAA,MAAM,EAAC,KAHR;AAIC,IAAA,GAAG,EAAEF,OAAO,CAACG,QAJd;AAKC,IAAA,WAAW,EAAC,GALb;AAMC,IAAA,KAAK,EAAC,yEANP;AAOC,IAAA,eAAe,MAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CADD;AAcA;;AAED,eAAeT,aAAf","sourcesContent":["import {useQuery} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport styles from \"../styles/main.module.css\";\n\nexport const GET_YOUTUBE_VIDEOS = gql`\n\tquery {\n\t\tyoutube {\n\t\t\tid\n\t\t\tvideoTitle\n\t\t\tvideoURL\n\t\t}\n\t}\n`;\n\nfunction YoutubeLoader() {\n\tconst {loading, error, data} = useQuery(GET_YOUTUBE_VIDEOS);\n\n\tif (loading) return \"\";\n\tif (error) return `Error! ${error.message}`;\n\n\treturn (\n\t\t<div className={styles.youtubeScrollr}>\n\t\t\t{data.youtube.map(youtube => (\n\t\t\t\t<iframe\n\t\t\t\t\tclassName={styles.youtubeVid}\n\t\t\t\t\twidth=\"325\"\n\t\t\t\t\theight=\"255\"\n\t\t\t\t\tsrc={youtube.videoURL}\n\t\t\t\t\tframeborder=\"0\"\n\t\t\t\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n\t\t\t\t\tallowfullscreen></iframe>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default YoutubeLoader;\n"]},"metadata":{},"sourceType":"module"}