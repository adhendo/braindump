{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/adamhendrickson/blogboi/pages/components/youtubeLoader.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery {\\n\\t\\tyoutube {\\n\\t\\t\\tid\\n\\t\\t\\tvideoTitle\\n\\t\\t\\tvideoURL\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nexport var GET_YOUTUBE_VIDEOS = gql(_templateObject());\n\nfunction YoutubeLoader() {\n  var _useQuery = useQuery(GET_YOUTUBE_VIDEOS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return \"\";\n  if (error) return \"Error! \".concat(error.message);\n  return __jsx(React.Fragment, null, data.youtube.map(function (youtube) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      key: youtube.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(\"iframe\", {\n      title: youtube.videoTitle,\n      src: youtube.videoURL,\n      width: \"400\",\n      height: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }));\n}\n\nexport default YoutubeLoader;","map":{"version":3,"sources":["/Users/adamhendrickson/blogboi/pages/components/youtubeLoader.js"],"names":["useQuery","gql","GET_YOUTUBE_VIDEOS","YoutubeLoader","loading","error","data","message","youtube","map","id","videoTitle","videoURL"],"mappings":";;;;;;;;;;;;;;;AAAA,SAAQA,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,kBAAkB,GAAGD,GAAH,mBAAxB;;AAUP,SAASE,aAAT,GAAyB;AAAA,kBACOH,QAAQ,CAACE,kBAAD,CADf;AAAA,MACjBE,OADiB,aACjBA,OADiB;AAAA,MACRC,KADQ,aACRA,KADQ;AAAA,MACDC,IADC,aACDA,IADC;;AAGxB,MAAIF,OAAJ,EAAa,OAAO,EAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB;AAEX,SACC,4BACED,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiB,UAAAD,OAAO;AAAA,WACxB,4BACC;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,KAAK,EAAEF,OAAO,CAACG,UADhB;AAEC,MAAA,GAAG,EAAEH,OAAO,CAACI,QAFd;AAGC,MAAA,KAAK,EAAC,KAHP;AAIC,MAAA,MAAM,EAAC,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CADwB;AAAA,GAAxB,CADF,CADD;AAeA;;AAED,eAAeT,aAAf","sourcesContent":["import {useQuery} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nexport const GET_YOUTUBE_VIDEOS = gql`\n\tquery {\n\t\tyoutube {\n\t\t\tid\n\t\t\tvideoTitle\n\t\t\tvideoURL\n\t\t}\n\t}\n`;\n\nfunction YoutubeLoader() {\n\tconst {loading, error, data} = useQuery(GET_YOUTUBE_VIDEOS);\n\n\tif (loading) return \"\";\n\tif (error) return `Error! ${error.message}`;\n\n\treturn (\n\t\t<>\n\t\t\t{data.youtube.map(youtube => (\n\t\t\t\t<>\n\t\t\t\t\t<div key={youtube.id}>\n\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\ttitle={youtube.videoTitle}\n\t\t\t\t\t\t\tsrc={youtube.videoURL}\n\t\t\t\t\t\t\twidth=\"400\"\n\t\t\t\t\t\t\theight=\"300\"></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t))}\n\t\t</>\n\t);\n}\n\nexport default YoutubeLoader;\n"]},"metadata":{},"sourceType":"module"}